<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="create_run_jar" name="Create Runnable Jar for Project AtmosSync">
	<!-- Build directory locations -->
	<property name="src" value="src"/>
    <property name="dist" value="dist"/>
	<property name="classes" value="classes"/>
	<property name="build" value="build"/>
	<property name="doc" value="doc/javadoc" />
	<property name="lib" value="lib" />

    <property name="test-src" value="test"/>
    <property name="test-classes" value="test-classes"/>
    <property name="test-lib" location="../../test/lib" />

    <property name="esu_java_path" location="../../api" />

	<!--ANT 1.7 is required                                        -->
	<!-- Classpath to compile with -->
	<path id="classpath">
		<fileset dir="${lib}">
			<include name="*.jar"/>
		</fileset>
        <fileset dir="${esu_java_path}/build">
            <include name="atmos-api-*.jar"/>
        </fileset>
        <fileset dir="${esu_java_path}/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${esu_java_path}/commons-httpclient">
			<include name="*.jar"/>
		</fileset>
	</path>

    <path id="test.classpath">
        <path refid="classpath" />
        <pathelement location="${classes}"/>
        <pathelement location="${src}"/>
        <fileset dir="${test-lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

	<!-- Builds the javadoc from the source code -->
	<target name="doc" depends="prepare">
		<javadoc source="1.6" destdir="${doc}" classpathref="classpath">
			<header>EMC Cloud Optimized Storage API for Java</header>
			<bottom>Copyright (c) 2012 EMC</bottom>
		    <fileset dir="${src}">
		    	<include name="**/*.java"/>
		    </fileset>
		</javadoc>
	</target>

	<!-- Compiles the java files -->
	<target name="compile" depends="prepare">
		<javac source="1.6" destdir="${classes}" srcdir="${src}" target="1.6"
			debug="true" classpathref="classpath">
		</javac>
	</target>

    <target name="compile-test" depends="prepare">
        <javac source="1.6" destdir="${test-classes}" srcdir="${test-src}" target="1.6"
               debug="true" classpathref="classpath">
        </javac>
    </target>

    <target name="create_run_jar" depends="compile">
        <jar destfile="${dist}/AtmosSync.jar" filesetmanifest="mergewithoutmain">
            <manifest>
                <attribute name="Main-Class" value="com.emc.atmos.sync.AtmosSync2"/>
                <attribute name="Class-Path" value="."/>
            </manifest>
            <fileset dir="classes"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/aws-java-sdk-1.3.0.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/c3p0-0.9.1.2.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/commons-cli-1.2.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/gson-2.0.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/jgrapht-0.8.2.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/mysql-connector-java-5.1.18-bin.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/org.springframework.asm-3.1.0.RELEASE.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/org.springframework.beans-3.1.0.RELEASE.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/org.springframework.context-3.1.0.RELEASE.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/org.springframework.context.support-3.1.0.RELEASE.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/org.springframework.core-3.1.0.RELEASE.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/org.springframework.expression-3.1.0.RELEASE.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/org.springframework.jdbc-3.1.0.RELEASE.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/org.springframework.transaction-3.1.0.RELEASE.jar"/>
            <fileset dir="${esu_java_path}/classes"/>
            <zipfileset excludes="META-INF/*.SF" src="${esu_java_path}/lib/jdom.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${esu_java_path}/lib/log4j-1.2.16.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${esu_java_path}/lib/commons-codec-1.4.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${esu_java_path}/commons-httpclient/commons-logging-1.1.1.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${esu_java_path}/lib/security-1.1.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${esu_java_path}/commons-httpclient/httpclient-4.2.2.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${esu_java_path}/commons-httpclient/httpclient-cache-4.2.2.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${esu_java_path}/commons-httpclient/httpcore-4.2.2.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${esu_java_path}/commons-httpclient/httpmime-4.2.2.jar"/>
        </jar>
    </target>

    <target name="test" depends="compile">
        <mkdir dir="${build}/test_report"/>
        <junit fork="true" maxmemory="128M" showoutput="yes" haltonfailure="yes" printsummary="withOutAndErr" dir="${build}/test_report">
            <classpath refid="test.classpath" />
            <formatter type="plain" usefile="false"/>
            <batchtest haltonfailure="no" fork="yes" todir="${build}/test_report">
                <fileset dir="${test-src}">
                    <include name="**/*Test.java"/>
                </fileset>
                <formatter type="xml" />
            </batchtest>
        </junit>
        <junitreport todir="${build}/test_report">
            <fileset dir="${build}/test_report">
                <include name="*.xml" />
            </fileset>
            <report todir="${build}/test_report" format="frames" />
        </junitreport>
    </target>

	<!-- Removes the build directories -->
	<target name="clean">
        <delete dir="${dist}" />
        <delete dir="${classes}" />
        <delete dir="${test-classes}"/>
        <delete dir="${build}" />
        <delete dir="${doc}" />
	</target>
	
	<!-- Creates the build directories -->
	<target name="prepare">
        <mkdir dir="${dist}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${test-classes}"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${doc}"/>
	</target>
	

</project>
