<project name="EMC ESU Java Testcases" default="dist">
	<!-- Build directory locations -->
	<property name="src" value="src"/>
    <property name="dist" value="dist"/>
	<property name="classes" value="classes"/>
	<property name="build" value="build"/>
	<property name="doc" value="doc/javadoc" />
	<property name="lib" value="lib" />
	<property name="samples" value="samples" />
	<property name="api.base" value="../api" />
	
	<!-- Classpath to compile with -->
	<path id="classpath">
		<fileset dir="${lib}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${api.base}/build">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${api.base}/lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="test.classpath">
	  <path refid="classpath" />
		<pathelement location="${classes}"/>
		<pathelement location="${src}"/>
		<fileset dir="${api.base}/build">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${api.base}/lib">
			<include name="**.jar"/>
		</fileset>
		<fileset dir="${api.base}/commons-httpclient">
		  <include name="**.jar"/>
		</fileset>
	</path>

	<!-- Builds the distribution zip file -->
	<target name="dist" depends="doc">
		<zip destfile="${dist}/esujava_testcases.zip">
			<fileset dir=".">
				<include name="${src}/**"/>
				<include name="${build}/**" />
				<include name="${doc}/**" />
				<include name="${lib}/**" />
				<include name="build.xml" />
				<include name="readme.txt" />
				
				<!-- Exclude all subversion dirs -->
				<exclude name="**/.svn/**"/>
			</fileset>
		</zip>
	</target>

	<!-- Compiles the java files -->
	<target name="compile" depends="prepare">
		<javac source="1.5" destdir="${classes}" srcdir="${src}" target="1.5"
			debug="true" classpathref="classpath">
		</javac>
	</target>
	
	<!-- Builds the javadoc from the source code -->
	<target name="doc" depends="prepare">
		<javadoc source="1.5" destdir="${doc}" classpathref="classpath">
			<header>EMC Cloud Optimized Storage API for Java</header>
			<bottom>Copyright (c) 2008 EMC</bottom>
		    <fileset dir="${src}">
		    	<include name="**/*.java"/>
		    </fileset>
		</javadoc>
	</target>
	
	<!-- Removes the build directories -->
	<target name="clean">
        <delete dir="${dist}" />
        <delete dir="${classes}" />
        <delete dir="${build}" />
        <delete dir="${doc}" />
	</target>
	
	<!-- Creates the build directories -->
	<target name="prepare" depends="define.atmos-java.properties">
        <mkdir dir="${dist}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${doc}"/>
	</target>
	
	<!-- Loads properties from file 'build-${username}.properties'-->
	<target name="define.build.user.1" if="env.USER">
	   <property name="build.user" value="${env.USER}" />
	</target>

	<target name="define.build.user.2" if="env.USERNAME">
	    <property name="build.user" value="${env.USERNAME}" />
	</target>

	<target name="define.atmos-java.properties" depends="define.build.user.1, define.build.user.2">
	    <property file="atmos-${build.user}.properties" />
	</target>
	
	<!-- Runs the unit tests -->
	<target name="test" depends="compile">
		<mkdir dir="${build}/test_report"/>
		<condition property="junit.debug.jvmarg.1" value="-Xdebug" else="-Ddummy">
		      <isset property="junit.debug" />
		</condition>
		<condition property="junit.debug.jvmarg.2" value="-Xrunjdwp:transport=dt_socket,address=${junit.debug.port},server=y,suspend=y" else="-Ddummy">
		      <isset property="junit.debug.port" />
		</condition>
		<echo message="arg1 ${junit.debug.jvmarg.1}"/>
		<echo message="user ${build.user}"/>
		<junit fork="true" maxmemory="128M" showoutput="yes" haltonfailure="yes" printsummary="withOutAndErr" dir="${build}/test_report">
			<classpath refid="test.classpath" />
			<formatter type="plain" usefile="false"/>
			<jvmarg value="-Datmos.uid=${atmos.uid}" />
			<jvmarg value="-Datmos.secret=${atmos.secret}" />
			<jvmarg value="-Datmos.host=${atmos.host}" />
			<jvmarg value="-Datmos.port=${atmos.port}" />
			<jvmarg value="${junit.debug.jvmarg.1}" />
			<jvmarg value="${junit.debug.jvmarg.2}" />
			<batchtest haltonfailure="no" fork="yes" todir="${build}/test_report">
				<fileset dir="${src}">
					<include name="**/EsuRest*Test.java"/>
					<exclude name="**/CosApiTest.java" />
				</fileset>
				<formatter type="xml" />
		  </batchtest>
		</junit>
		<junitreport todir="${build}/test_report">
		  <fileset dir="${build}/test_report">
		    <include name="*.xml" />
		  </fileset>
		  <report todir="${build}/test_report" format="frames" />
		</junitreport>
	</target>

</project>